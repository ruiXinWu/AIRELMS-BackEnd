<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roncoo.education.course.dao.impl.mapper.CourseUserStudyLogMapper">
    <resultMap id="BaseResultMap" type="com.roncoo.education.course.dao.impl.mapper.entity.CourseUserStudyLog">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="course_name" property="courseName" jdbcType="VARCHAR"/>
        <result column="chapter_id" property="chapterId" jdbcType="BIGINT"/>
        <result column="chapter_name" property="chapterName" jdbcType="VARCHAR"/>
        <result column="period_id" property="periodId" jdbcType="BIGINT"/>
        <result column="period_name" property="periodName" jdbcType="VARCHAR"/>
        <result column="user_no" property="userNo" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, gmt_create, course_id, course_name, chapter_id, chapter_name, period_id, period_name,
    user_no
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseUserStudyLogExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from course_user_study_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit ${limitStart} , ${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from course_user_study_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course_user_study_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample"
            parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseUserStudyLogExample">
        delete from course_user_study_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseUserStudyLog">
    insert into course_user_study_log (id, gmt_create, course_id,
      course_name, chapter_id, chapter_name,
      period_id, period_name, user_no
      )
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{courseId,jdbcType=BIGINT},
      #{courseName,jdbcType=VARCHAR}, #{chapterId,jdbcType=BIGINT}, #{chapterName,jdbcType=VARCHAR},
      #{periodId,jdbcType=BIGINT}, #{periodName,jdbcType=VARCHAR}, #{userNo,jdbcType=BIGINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseUserStudyLog">
        insert into course_user_study_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="courseName != null">
                course_name,
            </if>
            <if test="chapterId != null">
                chapter_id,
            </if>
            <if test="chapterName != null">
                chapter_name,
            </if>
            <if test="periodId != null">
                period_id,
            </if>
            <if test="periodName != null">
                period_name,
            </if>
            <if test="userNo != null">
                user_no,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="courseName != null">
                #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="chapterId != null">
                #{chapterId,jdbcType=BIGINT},
            </if>
            <if test="chapterName != null">
                #{chapterName,jdbcType=VARCHAR},
            </if>
            <if test="periodId != null">
                #{periodId,jdbcType=BIGINT},
            </if>
            <if test="periodName != null">
                #{periodName,jdbcType=VARCHAR},
            </if>
            <if test="userNo != null">
                #{userNo,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseUserStudyLogExample"
            resultType="java.lang.Integer">
        select count(*) from course_user_study_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update course_user_study_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.courseId != null">
                course_id = #{record.courseId,jdbcType=BIGINT},
            </if>
            <if test="record.courseName != null">
                course_name = #{record.courseName,jdbcType=VARCHAR},
            </if>
            <if test="record.chapterId != null">
                chapter_id = #{record.chapterId,jdbcType=BIGINT},
            </if>
            <if test="record.chapterName != null">
                chapter_name = #{record.chapterName,jdbcType=VARCHAR},
            </if>
            <if test="record.periodId != null">
                period_id = #{record.periodId,jdbcType=BIGINT},
            </if>
            <if test="record.periodName != null">
                period_name = #{record.periodName,jdbcType=VARCHAR},
            </if>
            <if test="record.userNo != null">
                user_no = #{record.userNo,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update course_user_study_log
        set id = #{record.id,jdbcType=BIGINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        course_id = #{record.courseId,jdbcType=BIGINT},
        course_name = #{record.courseName,jdbcType=VARCHAR},
        chapter_id = #{record.chapterId,jdbcType=BIGINT},
        chapter_name = #{record.chapterName,jdbcType=VARCHAR},
        period_id = #{record.periodId,jdbcType=BIGINT},
        period_name = #{record.periodName,jdbcType=VARCHAR},
        user_no = #{record.userNo,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseUserStudyLog">
        update course_user_study_log
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=BIGINT},
            </if>
            <if test="courseName != null">
                course_name = #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="chapterId != null">
                chapter_id = #{chapterId,jdbcType=BIGINT},
            </if>
            <if test="chapterName != null">
                chapter_name = #{chapterName,jdbcType=VARCHAR},
            </if>
            <if test="periodId != null">
                period_id = #{periodId,jdbcType=BIGINT},
            </if>
            <if test="periodName != null">
                period_name = #{periodName,jdbcType=VARCHAR},
            </if>
            <if test="userNo != null">
                user_no = #{userNo,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseUserStudyLog">
    update course_user_study_log
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      course_id = #{courseId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      chapter_id = #{chapterId,jdbcType=BIGINT},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      period_id = #{periodId,jdbcType=BIGINT},
      period_name = #{periodName,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
