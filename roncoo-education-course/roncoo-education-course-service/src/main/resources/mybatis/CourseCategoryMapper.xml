<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roncoo.education.course.dao.impl.mapper.CourseCategoryMapper">
    <resultMap id="BaseResultMap" type="com.roncoo.education.course.dao.impl.mapper.entity.CourseCategory">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="status_id" property="statusId" jdbcType="TINYINT"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="category_type" property="categoryType" jdbcType="TINYINT"/>
        <result column="category_name" property="categoryName" jdbcType="VARCHAR"/>
        <result column="floor" property="floor" jdbcType="TINYINT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, status_id, sort, parent_id, category_type, category_name,
    floor, remark
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseCategoryExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from course_category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit ${limitStart} , ${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from course_category
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course_category
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample"
            parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseCategoryExample">
        delete from course_category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseCategory">
    insert into course_category (id, gmt_create, gmt_modified,
      status_id, sort, parent_id,
      category_type, category_name, floor,
      remark)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP},
      #{statusId,jdbcType=TINYINT}, #{sort,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT},
      #{categoryType,jdbcType=TINYINT}, #{categoryName,jdbcType=VARCHAR}, #{floor,jdbcType=TINYINT},
      #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseCategory">
        insert into course_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="statusId != null">
                status_id,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="categoryType != null">
                category_type,
            </if>
            <if test="categoryName != null">
                category_name,
            </if>
            <if test="floor != null">
                floor,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="statusId != null">
                #{statusId,jdbcType=TINYINT},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="categoryType != null">
                #{categoryType,jdbcType=TINYINT},
            </if>
            <if test="categoryName != null">
                #{categoryName,jdbcType=VARCHAR},
            </if>
            <if test="floor != null">
                #{floor,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseCategoryExample"
            resultType="java.lang.Integer">
        select count(*) from course_category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update course_category
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.statusId != null">
                status_id = #{record.statusId,jdbcType=TINYINT},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=BIGINT},
            </if>
            <if test="record.categoryType != null">
                category_type = #{record.categoryType,jdbcType=TINYINT},
            </if>
            <if test="record.categoryName != null">
                category_name = #{record.categoryName,jdbcType=VARCHAR},
            </if>
            <if test="record.floor != null">
                floor = #{record.floor,jdbcType=TINYINT},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update course_category
        set id = #{record.id,jdbcType=BIGINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        status_id = #{record.statusId,jdbcType=TINYINT},
        sort = #{record.sort,jdbcType=INTEGER},
        parent_id = #{record.parentId,jdbcType=BIGINT},
        category_type = #{record.categoryType,jdbcType=TINYINT},
        category_name = #{record.categoryName,jdbcType=VARCHAR},
        floor = #{record.floor,jdbcType=TINYINT},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseCategory">
        update course_category
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="statusId != null">
                status_id = #{statusId,jdbcType=TINYINT},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="categoryType != null">
                category_type = #{categoryType,jdbcType=TINYINT},
            </if>
            <if test="categoryName != null">
                category_name = #{categoryName,jdbcType=VARCHAR},
            </if>
            <if test="floor != null">
                floor = #{floor,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.CourseCategory">
    update course_category
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status_id = #{statusId,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=BIGINT},
      category_type = #{categoryType,jdbcType=TINYINT},
      category_name = #{categoryName,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
