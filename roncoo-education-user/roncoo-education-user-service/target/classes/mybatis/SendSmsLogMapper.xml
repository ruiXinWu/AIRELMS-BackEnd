<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roncoo.education.user.dao.impl.mapper.SendSmsLogMapper">
    <resultMap id="BaseResultMap" type="com.roncoo.education.user.dao.impl.mapper.entity.SendSmsLog">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="template" property="template" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="CHAR"/>
        <result column="sms_code" property="smsCode" jdbcType="VARCHAR"/>
        <result column="is_success" property="isSuccess" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, gmt_create, template, mobile, sms_code, is_success
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.roncoo.education.user.dao.impl.mapper.entity.SendSmsLogExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from send_sms_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit ${limitStart} , ${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from send_sms_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from send_sms_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.user.dao.impl.mapper.entity.SendSmsLogExample">
        delete from send_sms_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.user.dao.impl.mapper.entity.SendSmsLog">
    insert into send_sms_log (id, gmt_create, template,
      mobile, sms_code, is_success
      )
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{template,jdbcType=VARCHAR},
      #{mobile,jdbcType=CHAR}, #{smsCode,jdbcType=VARCHAR}, #{isSuccess,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.user.dao.impl.mapper.entity.SendSmsLog">
        insert into send_sms_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="template != null">
                template,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="smsCode != null">
                sms_code,
            </if>
            <if test="isSuccess != null">
                is_success,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="template != null">
                #{template,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=CHAR},
            </if>
            <if test="smsCode != null">
                #{smsCode,jdbcType=VARCHAR},
            </if>
            <if test="isSuccess != null">
                #{isSuccess,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.user.dao.impl.mapper.entity.SendSmsLogExample"
            resultType="java.lang.Integer">
        select count(*) from send_sms_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update send_sms_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.template != null">
                template = #{record.template,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=CHAR},
            </if>
            <if test="record.smsCode != null">
                sms_code = #{record.smsCode,jdbcType=VARCHAR},
            </if>
            <if test="record.isSuccess != null">
                is_success = #{record.isSuccess,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update send_sms_log
        set id = #{record.id,jdbcType=BIGINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        template = #{record.template,jdbcType=VARCHAR},
        mobile = #{record.mobile,jdbcType=CHAR},
        sms_code = #{record.smsCode,jdbcType=VARCHAR},
        is_success = #{record.isSuccess,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.roncoo.education.user.dao.impl.mapper.entity.SendSmsLog">
        update send_sms_log
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="template != null">
                template = #{template,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=CHAR},
            </if>
            <if test="smsCode != null">
                sms_code = #{smsCode,jdbcType=VARCHAR},
            </if>
            <if test="isSuccess != null">
                is_success = #{isSuccess,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.user.dao.impl.mapper.entity.SendSmsLog">
    update send_sms_log
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      template = #{template,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=CHAR},
      sms_code = #{smsCode,jdbcType=VARCHAR},
      is_success = #{isSuccess,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
