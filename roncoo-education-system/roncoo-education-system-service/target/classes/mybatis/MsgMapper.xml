<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roncoo.education.system.dao.impl.mapper.MsgMapper">
    <resultMap id="BaseResultMap" type="com.roncoo.education.system.dao.impl.mapper.entity.Msg">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="status_id" property="statusId" jdbcType="TINYINT"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="msg_type" property="msgType" jdbcType="TINYINT"/>
        <result column="msg_title" property="msgTitle" jdbcType="VARCHAR"/>
        <result column="is_time_send" property="isTimeSend" jdbcType="TINYINT"/>
        <result column="send_time" property="sendTime" jdbcType="TIMESTAMP"/>
        <result column="is_send" property="isSend" jdbcType="TINYINT"/>
        <result column="is_top" property="isTop" jdbcType="TINYINT"/>
        <result column="back_remark" property="backRemark" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.roncoo.education.system.dao.impl.mapper.entity.Msg"
               extends="BaseResultMap">
        <result column="msg_text" property="msgText" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, status_id, sort, msg_type, msg_title, is_time_send,
    send_time, is_send, is_top, back_remark
  </sql>
    <sql id="Blob_Column_List">
    msg_text
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.roncoo.education.system.dao.impl.mapper.entity.MsgExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.roncoo.education.system.dao.impl.mapper.entity.MsgExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit ${limitStart} , ${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from msg
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from msg
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.system.dao.impl.mapper.entity.MsgExample">
        delete from msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.system.dao.impl.mapper.entity.Msg">
    insert into msg (id, gmt_create, gmt_modified,
      status_id, sort, msg_type,
      msg_title, is_time_send, send_time,
      is_send, is_top, back_remark,
      msg_text)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP},
      #{statusId,jdbcType=TINYINT}, #{sort,jdbcType=INTEGER}, #{msgType,jdbcType=TINYINT},
      #{msgTitle,jdbcType=VARCHAR}, #{isTimeSend,jdbcType=TINYINT}, #{sendTime,jdbcType=TIMESTAMP},
      #{isSend,jdbcType=TINYINT}, #{isTop,jdbcType=TINYINT}, #{backRemark,jdbcType=VARCHAR},
      #{msgText,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.system.dao.impl.mapper.entity.Msg">
        insert into msg
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="statusId != null">
                status_id,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="msgType != null">
                msg_type,
            </if>
            <if test="msgTitle != null">
                msg_title,
            </if>
            <if test="isTimeSend != null">
                is_time_send,
            </if>
            <if test="sendTime != null">
                send_time,
            </if>
            <if test="isSend != null">
                is_send,
            </if>
            <if test="isTop != null">
                is_top,
            </if>
            <if test="backRemark != null">
                back_remark,
            </if>
            <if test="msgText != null">
                msg_text,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="statusId != null">
                #{statusId,jdbcType=TINYINT},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="msgType != null">
                #{msgType,jdbcType=TINYINT},
            </if>
            <if test="msgTitle != null">
                #{msgTitle,jdbcType=VARCHAR},
            </if>
            <if test="isTimeSend != null">
                #{isTimeSend,jdbcType=TINYINT},
            </if>
            <if test="sendTime != null">
                #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isSend != null">
                #{isSend,jdbcType=TINYINT},
            </if>
            <if test="isTop != null">
                #{isTop,jdbcType=TINYINT},
            </if>
            <if test="backRemark != null">
                #{backRemark,jdbcType=VARCHAR},
            </if>
            <if test="msgText != null">
                #{msgText,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.system.dao.impl.mapper.entity.MsgExample"
            resultType="java.lang.Integer">
        select count(*) from msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update msg
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.statusId != null">
                status_id = #{record.statusId,jdbcType=TINYINT},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.msgType != null">
                msg_type = #{record.msgType,jdbcType=TINYINT},
            </if>
            <if test="record.msgTitle != null">
                msg_title = #{record.msgTitle,jdbcType=VARCHAR},
            </if>
            <if test="record.isTimeSend != null">
                is_time_send = #{record.isTimeSend,jdbcType=TINYINT},
            </if>
            <if test="record.sendTime != null">
                send_time = #{record.sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isSend != null">
                is_send = #{record.isSend,jdbcType=TINYINT},
            </if>
            <if test="record.isTop != null">
                is_top = #{record.isTop,jdbcType=TINYINT},
            </if>
            <if test="record.backRemark != null">
                back_remark = #{record.backRemark,jdbcType=VARCHAR},
            </if>
            <if test="record.msgText != null">
                msg_text = #{record.msgText,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update msg
        set id = #{record.id,jdbcType=BIGINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        status_id = #{record.statusId,jdbcType=TINYINT},
        sort = #{record.sort,jdbcType=INTEGER},
        msg_type = #{record.msgType,jdbcType=TINYINT},
        msg_title = #{record.msgTitle,jdbcType=VARCHAR},
        is_time_send = #{record.isTimeSend,jdbcType=TINYINT},
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
        is_send = #{record.isSend,jdbcType=TINYINT},
        is_top = #{record.isTop,jdbcType=TINYINT},
        back_remark = #{record.backRemark,jdbcType=VARCHAR},
        msg_text = #{record.msgText,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update msg
        set id = #{record.id,jdbcType=BIGINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        status_id = #{record.statusId,jdbcType=TINYINT},
        sort = #{record.sort,jdbcType=INTEGER},
        msg_type = #{record.msgType,jdbcType=TINYINT},
        msg_title = #{record.msgTitle,jdbcType=VARCHAR},
        is_time_send = #{record.isTimeSend,jdbcType=TINYINT},
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
        is_send = #{record.isSend,jdbcType=TINYINT},
        is_top = #{record.isTop,jdbcType=TINYINT},
        back_remark = #{record.backRemark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.education.system.dao.impl.mapper.entity.Msg">
        update msg
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="statusId != null">
                status_id = #{statusId,jdbcType=TINYINT},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="msgType != null">
                msg_type = #{msgType,jdbcType=TINYINT},
            </if>
            <if test="msgTitle != null">
                msg_title = #{msgTitle,jdbcType=VARCHAR},
            </if>
            <if test="isTimeSend != null">
                is_time_send = #{isTimeSend,jdbcType=TINYINT},
            </if>
            <if test="sendTime != null">
                send_time = #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isSend != null">
                is_send = #{isSend,jdbcType=TINYINT},
            </if>
            <if test="isTop != null">
                is_top = #{isTop,jdbcType=TINYINT},
            </if>
            <if test="backRemark != null">
                back_remark = #{backRemark,jdbcType=VARCHAR},
            </if>
            <if test="msgText != null">
                msg_text = #{msgText,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.roncoo.education.system.dao.impl.mapper.entity.Msg">
    update msg
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status_id = #{statusId,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      msg_type = #{msgType,jdbcType=TINYINT},
      msg_title = #{msgTitle,jdbcType=VARCHAR},
      is_time_send = #{isTimeSend,jdbcType=TINYINT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      is_send = #{isSend,jdbcType=TINYINT},
      is_top = #{isTop,jdbcType=TINYINT},
      back_remark = #{backRemark,jdbcType=VARCHAR},
      msg_text = #{msgText,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.system.dao.impl.mapper.entity.Msg">
    update msg
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status_id = #{statusId,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      msg_type = #{msgType,jdbcType=TINYINT},
      msg_title = #{msgTitle,jdbcType=VARCHAR},
      is_time_send = #{isTimeSend,jdbcType=TINYINT},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      is_send = #{isSend,jdbcType=TINYINT},
      is_top = #{isTop,jdbcType=TINYINT},
      back_remark = #{backRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
